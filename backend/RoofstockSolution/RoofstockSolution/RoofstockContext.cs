// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace RoofstockSolution
{
    public partial class RoofstockContext : DbContext
    {
        public RoofstockContext()
        {
        }

        public RoofstockContext(DbContextOptions<RoofstockContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Lease> Leases { get; set; }
        public virtual DbSet<Property> Properties { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Lease>(entity =>
            {
                entity.ToTable("Lease");

                entity.OwnsOne(p => p.LeaseSummary, a =>
                {
                    a.Property(e => e.HasPet);
                    a.Property(e => e.IsLeaseConcessions);
                    a.Property(e => e.IsPetsDeposit);
                    a.Property(e => e.IsRentersInsuranceRequired);
                    a.Property(e => e.IsSection8);
                    a.Property(e => e.IsTenantBackgroundChecked);
                    a.Property(e => e.IsTenantIncomeAbove3x);
                    a.Property(e => e.IsTenantMayTerminateEarly);
                    a.Property(e => e.IsTenantPurchaseOption);
                    a.Property(e => e.LeaseEndDate)
                        .HasColumnType("datetime");
                    a.Property(e => e.LeaseStartDate)
                        .HasColumnType("datetime");
                    a.Property(e => e.LeasingStatus)
                        .HasMaxLength(50);
                    a.Property(e => e.MarketedRent)
                        .HasColumnType("money");
                    a.Property(e => e.MonthlyRent)
                        .HasColumnType("money");
                    a.Property(e => e.Occupancy)
                        .HasMaxLength(50);
                    a.Property(e => e.PaymentStatus)
                        .HasMaxLength(50);
                    a.Property(e => e.PetFeeAmount)
                        .HasColumnType("money");
                    a.Property(e => e.PetsDepositAmount)
                        .HasColumnType("money");
                    a.Property(e => e.SecurityDepositAmount)
                        .HasColumnType("money");
                });
                entity.OwnsOne(p => p.ApplianceOwnership, a =>
                {
                    a.Property(e => e.Dishwasher)
                    .HasMaxLength(50);
                    a.Property(e => e.Dryer)
                        .HasMaxLength(50);
                    a.Property(e => e.Microwave)
                        .HasMaxLength(50);
                    a.Property(e => e.Refrigerator)
                        .HasMaxLength(50);
                    a.Property(e => e.Stove)
                        .HasMaxLength(50);
                    a.Property(e => e.Washer)
                        .HasMaxLength(50);
                });
                entity.OwnsOne(p => p.UtilitiesOwnership, a =>
                {
                    a.Property(e => e.Electric)
                        .HasMaxLength(50);
                    a.Property(e => e.Garbage)
                        .HasMaxLength(50);
                    a.Property(e => e.Gas)
                        .HasMaxLength(50);
                    a.Property(e => e.Landscaping)
                        .HasMaxLength(50);
                    a.Property(e => e.PestControl)
                        .HasMaxLength(50);
                    a.Property(e => e.Pool)
                        .HasMaxLength(50);
                    a.Property(e => e.Water)
                        .HasMaxLength(50);
                });
            });

            modelBuilder.Entity<Property>(entity =>
            {
                entity.ToTable("Property");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.OwnsOne(p => p.Address, a =>
                {
                    a.Property(e => e.Address1)
                        .IsRequired()
                        .HasMaxLength(50);
                    a.Property(e => e.Address2)
                        .HasMaxLength(50);
                    a.Property(e => e.City)
                        .IsRequired()
                        .HasMaxLength(50);
                    a.Property(e => e.Country)
                        .HasMaxLength(50);
                    a.Property(e => e.District)
                        .HasMaxLength(50);
                    a.Property(e => e.State)
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .IsFixedLength(true);
                    a.Property(e => e.Zip)
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .IsFixedLength(true);
                    a.Property(e => e.ZipPlus4)
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .IsFixedLength(true);
                });

                entity.OwnsOne(p => p.Financial, a =>
                {
                    a.Property(e => e.CapRate)
                        .HasColumnType("money");
                    a.Property(e => e.IsCashOnly);
                    a.Property(e => e.IsSection8);
                    a.Property(e => e.LeaseEndDate)
                        .HasColumnType("datetime");
                    a.Property(e => e.LeaseStartDate)
                        .HasColumnType("datetime");
                    a.Property(e => e.ListPrice)
                        .HasColumnType("money");
                    a.Property(e => e.MarketValue)
                        .HasColumnType("money");
                    a.Property(e => e.MonthlyHoa)
                        .HasColumnType("money");
                    a.Property(e => e.MonthlyManagementFees)
                        .HasColumnType("money");
                    a.Property(e => e.MonthlyRent)
                        .HasColumnType("money");
                    a.Property(e => e.NetYield);
                    a.Property(e => e.Occupancy)
                        .HasMaxLength(50);
                    a.Property(e => e.RehabCosts)
                        .HasColumnType("money");
                    a.Property(e => e.RehabData)
                        .HasColumnType("money");
                    a.Property(e => e.SalePrice)
                        .HasColumnType("money");
                    a.Property(e => e.TurnOverFee)
                        .HasColumnType("money");
                    a.Property(e => e.YearlyInsuranceCost)
                        .HasColumnType("money");
                    a.Property(e => e.YearlyPropertyTaxes)
                        .HasColumnType("money");
                });

                entity.OwnsOne(p => p.GoogleMapOption, a =>
                {
                    a.Property(e => e.HasStreetView);
                    a.Property(e => e.PovHeading);
                    a.Property(e => e.PovLatitude)
                        .HasColumnType("decimal(9, 6)");
                    a.Property(e => e.PovLongitude)
                        .HasColumnType("decimal(9, 6)");
                    a.Property(e => e.PovPitch);
                });

                entity.OwnsOne(p => p.Physical, a =>
                {
                    a.Property(e => e.BathRooms)
                        .HasColumnType("decimal(4, 2)");
                    a.Property(e => e.BedRooms)
                        .HasColumnType("decimal(4, 2)");
                    a.Property(e => e.IsPool);
                    a.Property(e => e.LotSize);
                    a.Property(e => e.ParcelNumber)
                        .HasMaxLength(50);
                    a.Property(e => e.SquareFeet);
                    a.Property(e => e.Stories);
                    a.Property(e => e.Units);
                    a.Property(e => e.YearBuilt);
                    a.Property(e => e.ZipYearBuilt);
                });

                entity.OwnsOne(p => p.Score, a =>
                {
                    a.Property(e => e.CharterSchoolScore)
                        .HasMaxLength(50);
                    a.Property(e => e.ConditionScore)
                        .HasMaxLength(50);
                    a.Property(e => e.CrimeScore)
                        .HasMaxLength(50);
                    a.Property(e => e.FloodRiskScore)
                        .HasMaxLength(50);
                    a.Property(e => e.NeighborhoodScore);
                    a.Property(e => e.OverallScore)
                        .HasMaxLength(50);
                    a.Property(e => e.QualityScore)
                        .HasMaxLength(50);
                    a.Property(e => e.SchoolScore)
                        .HasMaxLength(50);
                    a.Property(e => e.WalkabilityScore)
                        .HasMaxLength(50);
                });

                entity.OwnsOne(p => p.Valuation, a =>
                {
                    a.Property(e => e.AvmBpiValue)
                        .HasColumnType("money");
                    a.Property(e => e.AvmBpoAdjValue)
                        .HasColumnType("money");
                    a.Property(e => e.AvmBpoDate)
                        .HasColumnType("datetime");
                    a.Property(e => e.RsAvmDate)
                        .HasColumnType("datetime");
                    a.Property(e => e.RsAvmValue)
                        .HasColumnType("money");
                    a.Property(e => e.RsBpoMergeValue)
                        .HasColumnType("money");
                });

                entity.Property(e => e.AllowableSaleTypes).HasMaxLength(50);

                entity.Property(e => e.AllowedFundingTypes).HasMaxLength(50);

                entity.Property(e => e.CertificationLevel).HasMaxLength(50);

                entity.Property(e => e.Description).HasMaxLength(200);

                entity.Property(e => e.DiligenceVaultSummary).HasMaxLength(50);

                entity.Property(e => e.EscrowClosingDate).HasColumnType("date");

                entity.Property(e => e.ExternalId).HasMaxLength(50);

                entity.Property(e => e.FeaturedReason).HasMaxLength(50);

                entity.Property(e => e.Highlights).HasMaxLength(400);

                entity.Property(e => e.Hoa).HasColumnType("money");

                entity.Property(e => e.InspectionType).HasMaxLength(50);

                entity.Property(e => e.Latitude).HasColumnType("decimal(9, 6)");

                entity.Property(e => e.Longitude).HasColumnType("decimal(9, 6)");

                entity.Property(e => e.MainImageUrl).HasMaxLength(1000);

                entity.Property(e => e.Manager).HasMaxLength(50);

                entity.Property(e => e.PersonalProperties).HasMaxLength(50);

                entity.Property(e => e.PriceVisibility)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PropertyName).HasMaxLength(50);

                entity.Property(e => e.PropertyType)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Seller).HasMaxLength(50);

                entity.Property(e => e.SellerBroker).HasMaxLength(50);

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Visibility)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.Lease)
                    .WithMany(p => p.Properties)
                    .HasForeignKey(d => d.LeaseId)
                    .HasConstraintName("FK_Property_Lease");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}